name: hoodoo-postgres
services:
  postgres-primary:
    image: bitnami/postgresql:15
    environment:
      - POSTGRES_PASSWORD=hoodoo
      - POSTGRESQL_REPLICATION_MODE=master
      - POSTGRESQL_REPLICATION_USER=repl_user
      - POSTGRESQL_REPLICATION_PASSWORD=repl_user
      - POSTGRESQL_DATABASE=hoodoo
      - POSTGRESQL_EXTRA_FLAGS=-c wal_level=logical -c max_wal_size=4GB -c min_wal_size=1GB
    expose:
      - 5432
    ports:
      - "5432:5432"
    healthcheck:
      test: pg_isready -U postgres
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - postgres:/var/lib/postgresql/data-hoodoo
      - ./employees_data.sql:/docker-entrypoint-initdb.d/init.sql

  cache:
    image: docker.io/readysettech/readyset:latest
    platform: linux/amd64
    ports:
      # The ReadySet Adapter listen port, i.e. what your application / SQL shell connects to
      - "5433:5433"
      # ReadySet Prometheus metrics available at http://localhost:6034/metrics
      # e.g. curl -X GET http://localhost:6034/metrics
      - "6034:6034"
    environment:
      DEPLOYMENT_ENV: hoodoo_docker
      DB_DIR: /state
      PROMETHEUS_METRICS: true
      ALLOW_FULL_MATERIALIZATION: true 
      QUERY_CACHING: explicit
      QUERY_LOG_MODE: all-queries
      STANDALONE: true
      DEPLOYMENT: docker_compose_deployment
      LISTEN_ADDRESS: 0.0.0.0:5433
      UPSTREAM_DB_URL: postgresql://postgres:hoodoo@postgres-primary/hoodoo
      CONTROLLER_ADDRESS: 0.0.0.0
    volumes:
      - "readyset:/state"
    healthcheck:
      test: [ "CMD", "curl", "--fail", "127.0.0.1:6034/health" ]
      interval: 2s
      timeout: 1s
      retries: 5
      start_period: 5s
    depends_on:
      postgres-primary:
        condition: service_healthy

volumes:
  postgres: ~
  readyset: ~