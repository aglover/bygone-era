/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package io.readyset.bygone;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Timestamp;

public class App {
   
    public static void main(String[] args) {
        // gradle run --args="port=5433"
        for (String s: args) {
            if(s.startsWith("port")){
                String[] port = s.split("=");
                System.out.println("Port is " + port[1]);
            }
        }

        doConnectionTest();
        doSimpleSelectTest();
        doCountOfManagersJoin();
        doManagersJoin();
    }

    public static void doManagersJoin(){
         String SQL_SELECT = "select e.first_name, e.last_name, t.title, d.dept_name from employees.employee e " +
        "join employees.department_manager dm on e.id = dm.employee_id " +
        "join employees.department d on dm.department_id = d.id " +
        "join employees.title t on e.id = t.employee_id " +
        "where t.title = 'Manager' order by e.id";

        try (Connection conn = DriverManager.getConnection(
                "jdbc:postgresql://127.0.0.1:5433/hoodoo", "postgres", "hoodoo");
            
            PreparedStatement preparedStatement = conn.prepareStatement(SQL_SELECT)) {

            ResultSet resultSet = preparedStatement.executeQuery();

            while (resultSet.next()) {
                String firstName = resultSet.getString("first_name");
                String lastName = resultSet.getString("last_name");
                String title = resultSet.getString("title");
                String deptName = resultSet.getString("dept_name");
                

                String row = firstName + " " + lastName + "'s title: " + 
                    title + " and works in the " + deptName + " department";
                System.out.println(row);
            }
        } catch (SQLException e) {
            System.err.format("SQL State: %s\n%s", e.getSQLState(), e.getMessage());
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    public static void doCountOfManagersJoin(){
         String SQL_SELECT = "select e.gender, count(dm.employee_id) as num_managers " +
         "from employees.employee e " +
         "join employees.department_manager dm on dm.employee_id = e.id group by gender";

        try (Connection conn = DriverManager.getConnection(
                "jdbc:postgresql://127.0.0.1:5433/hoodoo", "postgres", "hoodoo");
             PreparedStatement preparedStatement = conn.prepareStatement(SQL_SELECT)) {

            ResultSet resultSet = preparedStatement.executeQuery();

            while (resultSet.next()) {
                String gender = resultSet.getString("gender");
                int count = resultSet.getInt("num_managers");

                String row = "Gender: " + gender + " Count: " + count;
                System.out.println(row);
            }
        } catch (SQLException e) {
            System.err.format("SQL State: %s\n%s", e.getSQLState(), e.getMessage());
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    public static void doSimpleSelectTest() {

        String SQL_SELECT = "select id, first_name, last_name, hire_date from employees.employee limit 10";

        try (Connection conn = DriverManager.getConnection(
                "jdbc:postgresql://127.0.0.1:5433/hoodoo", "postgres", "hoodoo");
             PreparedStatement preparedStatement = conn.prepareStatement(SQL_SELECT)) {

            ResultSet resultSet = preparedStatement.executeQuery();

            while (resultSet.next()) {

                long id = resultSet.getLong("id");
                String fName = resultSet.getString("first_name");
                String lName = resultSet.getString("last_name");
                Timestamp hireDate = resultSet.getTimestamp("hire_date");
                String row = "ID: " + id + " first name: " + fName + " last name: " + 
                    lName + " hire date: " + hireDate;
                System.out.println(row);
            }
        } catch (SQLException e) {
            System.err.format("SQL State: %s\n%s", e.getSQLState(), e.getMessage());
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    public static void doConnectionTest() {
        try (Connection conn = DriverManager.getConnection(
                "jdbc:postgresql://127.0.0.1:5433/hoodoo", "postgres", "hoodoo")) {

            if (conn != null) {
                System.out.println("Connected to the database!");
            } else {
                System.out.println("Failed to make connection!");
            }

        } catch (SQLException e) {
            System.err.format("SQL State: %s\n%s", e.getSQLState(), e.getMessage());
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
}
